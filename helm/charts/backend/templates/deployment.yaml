---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: {{ .Chart.Name }}
    app.kubernetes.io/part-of: {{ .Values.global.partOf }}
    environment: {{ .Values.backend.lables.environment }}
spec:
  replicas: {{ .Values.backend.replicas }}
  revisionHistoryLimit: {{ .Values.global.revisionHistoryLimit }}
  strategy:
    type: {{ .Values.global.strategyType }}
    rollingUpdate:
      maxUnavailable: {{ .Values.backend.maxUnavailable }}
      maxSurge: {{ .Values.backend.maxSurge }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        environment: {{ .Values.backend.lables.environment }}
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "{{ .Values.backend.service.port }}"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ tpl .Values.backend.image.repository . }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - name: {{ .Chart.Name }}
              containerPort: {{ .Values.backend.service.port }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.backend.service.port }}
            initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.backend.livenessProbe.failureThreshold }}
          resources:
            requests:
              memory: "{{ .Values.backend.resources.requests.memory }}"
              cpu: "{{ .Values.backend.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.backend.resources.limits.memory }}"
              cpu: "{{ .Values.backend.resources.limits.cpu }}"
      imagePullSecrets:
        - name: {{ .Chart.Name }}-docker-config-secret
